version: "3"
services:
  postgis:
    build: postgis
    # command: ["postgres", "-c", "log_statement=all"]
    ports:
      - "5432:5432"
    volumes:
      - ./postgis/postgres-dev.conf:/etc/postgresql/postgresql.conf

  imposm:
    build: imposm

  imposm-watcher:
    build: imposm-watcher
    volumes:
      - ./imposm-watcher/:/code

  tiles:
    build: tiles
    ports:
      - "9999:9999"
    volumes:
      - ./tiles/:/app

  tiles-cleaner:
    build: tiles-cleaner
    volumes:
      - ./tiles/:/app

  celery:
    build: back
    command: celery -A batimap.app_celery:app worker --loglevel=info --queues celery --concurrency 1
    volumes:
      - ./back/:/code

  celery-slow:
    build: back
    command: celery -A batimap.app_celery:app worker --loglevel=info --queues celery_slow --concurrency 1
    volumes:
      - ./back/:/code

  back:
    build: back
    ports:
      - "5000:5000"
    volumes:
      - ./back/:/code
      - ./back/app-docker.conf/:/code/app.conf:ro

  front:
    build:
      context: front
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    volumes:
      - ./front/:/usr/src/app
      - ./data/front/node_modules:/usr/src/app/node_modules

  redis:
    ports:
      - "6379:6379"

  pghero:
    image: ankane/pghero
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB
    depends_on:
      - postgis

  flower:
    build: back
    env_file:
      - ./.env
    ports:
      - "5566:5566"
    command: celery -A batimap.app_celery:app flower --port=5566
    volumes:
      - ./back/app-docker.conf/:/code/batimap/app.conf:ro
      - ./back/:/code
    depends_on:
      - postgis
