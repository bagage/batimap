[webserver]
port = ":9999"

[cache]
type = "file"
max_zoom = 11
basepath = "/data/cache"

# register data providers
[[providers]]
name = "cadastre"       # provider name is referenced from map layers
type = "postgis"        # the type of data provider. currently only supports postgis
host = "postgis"        # postgis database host
port = 5432             # postgis database port
database = "gis"        # postgis database name
user = "docker"       # postgis database user
password = "batimap"    # postgis database password
srid = 4326             # The default srid for this provider. If not provided it will be WebMercator (3857)

[[providers.layers]]
name = "cities"
geometry_fieldname = "geometry"
id_fieldname = "osm_id"
sql = """
  SELECT
    DISTINCT ON (oa.insee)
    ST_AsBinary(ST_Simplify(geometry, 0.002, true)) AS geometry,
    ABS(oa.osm_id) AS osmid,
    oa.osm_id,
    oa.name,
    cs.insee,
    cast(cs.details as text) as details,
    cs.date,
    case when cs.date_cadastre > NOW() - INTERVAL '30 days' then 'true' else '' end as josm_ready,
    cs.buildings as osm_buildings,
    cadastre_stats.buildings as od_buildings
  FROM
    osm_admin oa,
    city_stats cs
    LEFT JOIN cadastre_stats on cadastre_stats.insee = cs.insee
  WHERE
    oa.admin_level::int >= '7'
    AND cs.insee = oa.insee
    AND geometry && !BBOX!
  ORDER BY
    oa.insee, oa.admin_level
"""

[[providers.layers]]
name = "cities-point"
geometry_fieldname = "geometry"
id_fieldname = "osm_id"
sql = """
  SELECT
    DISTINCT ON (oa.insee)
    ST_AsBinary(ST_Centroid(oa.geometry)) AS geometry,
    oa.osm_id,
    ABS(oa.osm_id) AS osmid,
    oa.name,
    cast(cs.details as text) as details,
    cs.insee,
    cs.date,
    case when cs.date_cadastre > NOW() - INTERVAL '30 days' then 'true' else '' end as josm_ready,
    cs.buildings as osm_buildings,
    cadastre_stats.buildings as od_buildings
  FROM
    osm_admin  oa,
    city_stats cs
    LEFT JOIN cadastre_stats on cadastre_stats.insee = cs.insee
  WHERE
    oa.admin_level::int >= '7'
    AND cs.insee = oa.insee
    AND geometry && !BBOX!
  ORDER BY
    oa.insee, oa.admin_level
"""

[[providers.layers]]
name = "departments"
geometry_fieldname = "geometry"
id_fieldname = "osm_id"
sql = """
  SELECT
    ST_AsBinary(ST_Simplify(oa.geometry, 0.03, true)) AS geometry,
    vds.date,
    oa.name,
    oa.insee AS insee,
    ABS(oa.osm_id) AS osmid,
    oa.osm_id,
    cadastre.buildings as od_buildings
  FROM
    osm_admin oa,
    (
      SELECT DISTINCT ON (department)
        department,
        date
      FROM
        city_stats
      GROUP BY
        department,
        date
      ORDER BY
        department,
        COUNT(date) DESC
    ) vds
    left join (
      SELECT DISTINCT
        ON (department) department,
        SUM(buildings) as buildings
      FROM
        cadastre_stats
      GROUP BY
        department
      ORDER BY
        department
    ) cadastre on cadastre.department = vds.department
  WHERE
    oa.admin_level = '6'
    AND oa.insee LIKE vds.department || '%'
    AND geometry && !BBOX!
"""

[[maps]]
name = "batimap"
  [[maps.layers]]
  provider_layer = "cadastre.cities"
  min_zoom = 8
  max_zoom = 11

  [[maps.layers]]
  provider_layer = "cadastre.cities-point"
  min_zoom = 6
  max_zoom = 8

  [[maps.layers]]
  provider_layer = "cadastre.departments"
  min_zoom = 0
  max_zoom = 6
